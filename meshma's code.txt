Student s;
    string line;
    bool found = false;

    while (getline(infile, line)) {
        // Read student data from the file
        istringstream ss(line);
        ss >> s.rId >> s.fName >> s.lName >> s.classes >> s.number;

        if (s.rId != rId) {
            // Write to the temporary file if the student ID does not match
            tempfile << s.rId << " " << s.fName << " " << s.lName << " " << s.classes << " " << s.number << endl;
        } else {
            found = true;
            cout << "Student deleted successfully" << endl;
        }
    }

    if (!found) {
        cout << "Student with ID '" << rId << "' not found!" << endl;
    }

    infile.close();
    tempfile.close();

    // Replace the original file with the updated one
    remove("studentInfo.txt");
    rename("tempInfo.txt", "studentInfo.txt");
}

// Function to list all students
void listOfStudents() {
    ifstream file("studentInfo.txt");
    if (!file.is_open()) {
        cout << "Error: Unable to open file!" << endl;
        return;
    }

    cout << "\nStudent List:" << endl;
    cout << setw(15) << "Reg. ID" << setw(15) << "First Name" << setw(15) << "Last Name" << setw(15) << "Class" << setw(15) << "Mobile Number" << endl;

    Student s;
    // Read and print student details from the file
    while (file >> s.rId >> s.fName >> s.lName >> s.classes >> s.number) {
        cout << setw(15) << s.rId << setw(15) << s.fName << setw(15) << s.lName << setw(15) << s.classes << setw(15) << s.number << endl;
    }

    file.close();
}

int main() {
    int choice;
    do {
        cout << "\n1. New Student Registration" << endl;
        cout << "2. Update Student Information" << endl;
        cout << "3. Delete Student Information" << endl;
        cout << "4. List of Students" << endl;
        cout << "5. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                newStudentRegistration();
                break;
            case 2:
                updateStudentInformation();
                break;
            case 3:
                deleteStudentInformation();
                break;
            case 4:
                listOfStudents();
                break;
            case 5:
                cout << "Exiting the program..." << endl;
                break;
            default:
                cout << "Invalid choice, please try again!" << endl;
        }
    } while (choice != 5);

    return 0;
}